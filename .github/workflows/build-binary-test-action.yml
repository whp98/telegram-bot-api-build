name: build-binary-test-action
on:
  push:
    tags:
      - test*
jobs:
  # build-macos-m1:
  #   runs-on: [macos, arm64]
  #   steps:
  #   - uses: maxim-lobanov/setup-xcode@v1
  #     with:
  #       xcode-version: latest-stable
  #   - uses: actions/checkout@v3
  #   - run: sh build-macos-m1.sh
  #   - name: Upload Artifact[macos-m1]
  #     uses: actions/upload-artifact@v1.0.0
  #     with:
  #       name: telegram-bot-api-macos-build-m1
  #       path: telegram-bot-api/bin/
  #   - name: Archive Artifacts
  #     uses: thedoctor0/zip-release@master
  #     with:
  #       type: "zip"
  #       filename: AppName-${{github.ref_name}}-windows.zip
  #       directory: build/windows/runner/Release
  build-linux-gpp-x64:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - run: sh build-linux-g++.sh
        - name: Upload Artifact[linux-g++-x64]
          uses: actions/upload-artifact@v1.0.0
          with:
            name: telegram-bot-api-linux-g++-build-x64
            path: telegram-bot-api/bin/
        - name: Generate Zip
          run: |
            sudo apt-get install zip
            zip -9 telegram-bot-api-linux-g++-build-x64.zip telegram-bot-api/bin/*
        - name: Create Release
          id: create_release
          uses: ncipollo/release-action@v1
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            allowUpdates: true
        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传网址，无需改动
            asset_path: telegram-bot-api-linux-g++-ubuntu20-build-x64.zip # 上传路径
            asset_name: telegram-bot-api-linux-g++--ubuntu20-build-x64.zip # 资源名
            asset_content_type: application/zip